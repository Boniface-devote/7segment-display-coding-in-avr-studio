
working.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000011c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  0000011c  00000190  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000019c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001cc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000208  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000063d  00000000  00000000  00000228  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000594  00000000  00000000  00000865  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004a4  00000000  00000000  00000df9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000012a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000609f  00000000  00000000  000012c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000f8  00000000  00000000  00007363  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  0000745b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000021f  00000000  00000000  0000746b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
   2:	00 00       	nop
   4:	3a c0       	rjmp	.+116    	; 0x7a <__bad_interrupt>
   6:	00 00       	nop
   8:	38 c0       	rjmp	.+112    	; 0x7a <__bad_interrupt>
   a:	00 00       	nop
   c:	36 c0       	rjmp	.+108    	; 0x7a <__bad_interrupt>
   e:	00 00       	nop
  10:	34 c0       	rjmp	.+104    	; 0x7a <__bad_interrupt>
  12:	00 00       	nop
  14:	32 c0       	rjmp	.+100    	; 0x7a <__bad_interrupt>
  16:	00 00       	nop
  18:	30 c0       	rjmp	.+96     	; 0x7a <__bad_interrupt>
  1a:	00 00       	nop
  1c:	2e c0       	rjmp	.+92     	; 0x7a <__bad_interrupt>
  1e:	00 00       	nop
  20:	2c c0       	rjmp	.+88     	; 0x7a <__bad_interrupt>
  22:	00 00       	nop
  24:	2a c0       	rjmp	.+84     	; 0x7a <__bad_interrupt>
  26:	00 00       	nop
  28:	28 c0       	rjmp	.+80     	; 0x7a <__bad_interrupt>
  2a:	00 00       	nop
  2c:	26 c0       	rjmp	.+76     	; 0x7a <__bad_interrupt>
  2e:	00 00       	nop
  30:	24 c0       	rjmp	.+72     	; 0x7a <__bad_interrupt>
  32:	00 00       	nop
  34:	22 c0       	rjmp	.+68     	; 0x7a <__bad_interrupt>
  36:	00 00       	nop
  38:	20 c0       	rjmp	.+64     	; 0x7a <__bad_interrupt>
  3a:	00 00       	nop
  3c:	1e c0       	rjmp	.+60     	; 0x7a <__bad_interrupt>
  3e:	00 00       	nop
  40:	1c c0       	rjmp	.+56     	; 0x7a <__bad_interrupt>
  42:	00 00       	nop
  44:	1a c0       	rjmp	.+52     	; 0x7a <__bad_interrupt>
  46:	00 00       	nop
  48:	18 c0       	rjmp	.+48     	; 0x7a <__bad_interrupt>
  4a:	00 00       	nop
  4c:	16 c0       	rjmp	.+44     	; 0x7a <__bad_interrupt>
  4e:	00 00       	nop
  50:	14 c0       	rjmp	.+40     	; 0x7a <__bad_interrupt>
	...

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e1       	ldi	r30, 0x1C	; 28
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 36       	cpi	r26, 0x6C	; 108
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	02 d0       	rcall	.+4      	; 0x7c <main>
  78:	4f c0       	rjmp	.+158    	; 0x118 <_exit>

0000007a <__bad_interrupt>:
  7a:	c2 cf       	rjmp	.-124    	; 0x0 <__vectors>

0000007c <main>:
unsigned char k[4][3]={{0xF9,0xA4,0xB0},{0x99,0x92,0x82},{0xF8,0x80,0x90},{0x88,0xc0,0xc0}};

int main()
{
	unsigned char c,r;
	DDRD = 0XFF;
  7c:	8f ef       	ldi	r24, 0xFF	; 255
  7e:	81 bb       	out	0x11, r24	; 17
	DDRC=0xf0;
  80:	90 ef       	ldi	r25, 0xF0	; 240
  82:	94 bb       	out	0x14, r25	; 20
	PORTC=0xff;
  84:	85 bb       	out	0x15, r24	; 21
			if(r!=0x0f)
			{
				c=0;
				break;
			}
			PORTC=0xdf;     //0b11011111
  86:	2f ed       	ldi	r18, 0xDF	; 223
			if(r!=0x0f)
			{
				c=1;
				break;
			}
			PORTC=0xbf;     //0b10111111
  88:	3f eb       	ldi	r19, 0xBF	; 191
			r=PINC&0x0f;
		}	  while(r==0x0f);
		
		while(1)
		{
			PORTC=0xef;     //0b11101111
  8a:	9f ee       	ldi	r25, 0xEF	; 239
			}
			PORTC=0xdf;     //0b11011111
			r=PINC&0x0f;
			if(r!=0x0f)
			{
				c=1;
  8c:	51 e0       	ldi	r21, 0x01	; 1
			}
			PORTC=0xbf;     //0b10111111
			r=PINC&0x0f;
			if(r!=0x0f)
			{
				c=2;
  8e:	62 e0       	ldi	r22, 0x02	; 2
		{
			PORTC=0xef;     //0b11101111
			r=PINC&0x0f;
			if(r!=0x0f)
			{
				c=0;
  90:	40 e0       	ldi	r20, 0x00	; 0
	while(1)
	{
		
		do
		{
			PORTC&=0x0f;
  92:	85 b3       	in	r24, 0x15	; 21
  94:	8f 70       	andi	r24, 0x0F	; 15
  96:	85 bb       	out	0x15, r24	; 21
			r=PINC&0x0f;
  98:	83 b3       	in	r24, 0x13	; 19
		} while(r!=0x0f);
  9a:	8f 70       	andi	r24, 0x0F	; 15
  9c:	8f 30       	cpi	r24, 0x0F	; 15
  9e:	c9 f7       	brne	.-14     	; 0x92 <main+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a0:	e7 e8       	ldi	r30, 0x87	; 135
  a2:	f3 e1       	ldi	r31, 0x13	; 19
  a4:	31 97       	sbiw	r30, 0x01	; 1
  a6:	f1 f7       	brne	.-4      	; 0xa4 <main+0x28>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <main+0x2e>
  aa:	00 00       	nop
	

		do
		{
			_delay_ms(20);
			r=PINC&0x0f;
  ac:	83 b3       	in	r24, 0x13	; 19
		}	  while(r==0x0f);
  ae:	8f 70       	andi	r24, 0x0F	; 15
  b0:	8f 30       	cpi	r24, 0x0F	; 15
  b2:	b1 f3       	breq	.-20     	; 0xa0 <main+0x24>
		
		while(1)
		{
			PORTC=0xef;     //0b11101111
  b4:	95 bb       	out	0x15, r25	; 21
			r=PINC&0x0f;
  b6:	83 b3       	in	r24, 0x13	; 19
  b8:	8f 70       	andi	r24, 0x0F	; 15
			if(r!=0x0f)
  ba:	8f 30       	cpi	r24, 0x0F	; 15
  bc:	61 f4       	brne	.+24     	; 0xd6 <main+0x5a>
			{
				c=0;
				break;
			}
			PORTC=0xdf;     //0b11011111
  be:	25 bb       	out	0x15, r18	; 21
			r=PINC&0x0f;
  c0:	83 b3       	in	r24, 0x13	; 19
  c2:	8f 70       	andi	r24, 0x0F	; 15
			if(r!=0x0f)
  c4:	8f 30       	cpi	r24, 0x0F	; 15
  c6:	49 f4       	brne	.+18     	; 0xda <main+0x5e>
			{
				c=1;
				break;
			}
			PORTC=0xbf;     //0b10111111
  c8:	35 bb       	out	0x15, r19	; 21
			r=PINC&0x0f;
  ca:	83 b3       	in	r24, 0x13	; 19
  cc:	8f 70       	andi	r24, 0x0F	; 15
			if(r!=0x0f)
  ce:	8f 30       	cpi	r24, 0x0F	; 15
  d0:	89 f3       	breq	.-30     	; 0xb4 <main+0x38>
			{
				c=2;
  d2:	e6 2f       	mov	r30, r22
  d4:	03 c0       	rjmp	.+6      	; 0xdc <main+0x60>
		{
			PORTC=0xef;     //0b11101111
			r=PINC&0x0f;
			if(r!=0x0f)
			{
				c=0;
  d6:	e4 2f       	mov	r30, r20
  d8:	01 c0       	rjmp	.+2      	; 0xdc <main+0x60>
			}
			PORTC=0xdf;     //0b11011111
			r=PINC&0x0f;
			if(r!=0x0f)
			{
				c=1;
  da:	e5 2f       	mov	r30, r21
				break;
			}

		}

		if(r==0x0e)
  dc:	8e 30       	cpi	r24, 0x0E	; 14
  de:	31 f4       	brne	.+12     	; 0xec <main+0x70>
		PORTD=k[0][c];
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	e0 5a       	subi	r30, 0xA0	; 160
  e4:	ff 4f       	sbci	r31, 0xFF	; 255
  e6:	80 81       	ld	r24, Z
  e8:	82 bb       	out	0x12, r24	; 18
  ea:	d3 cf       	rjmp	.-90     	; 0x92 <main+0x16>
		else if(r==0x0d)
  ec:	8d 30       	cpi	r24, 0x0D	; 13
  ee:	31 f4       	brne	.+12     	; 0xfc <main+0x80>
		PORTD=k[1][c];
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	e0 5a       	subi	r30, 0xA0	; 160
  f4:	ff 4f       	sbci	r31, 0xFF	; 255
  f6:	83 81       	ldd	r24, Z+3	; 0x03
  f8:	82 bb       	out	0x12, r24	; 18
  fa:	cb cf       	rjmp	.-106    	; 0x92 <main+0x16>
		else if(r==0x0b)
  fc:	8b 30       	cpi	r24, 0x0B	; 11
  fe:	31 f4       	brne	.+12     	; 0x10c <main+0x90>
		PORTD=k[2][c];
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	e0 5a       	subi	r30, 0xA0	; 160
 104:	ff 4f       	sbci	r31, 0xFF	; 255
 106:	86 81       	ldd	r24, Z+6	; 0x06
 108:	82 bb       	out	0x12, r24	; 18
 10a:	c3 cf       	rjmp	.-122    	; 0x92 <main+0x16>
		else
		PORTD=k[3][c];
 10c:	f0 e0       	ldi	r31, 0x00	; 0
 10e:	e0 5a       	subi	r30, 0xA0	; 160
 110:	ff 4f       	sbci	r31, 0xFF	; 255
 112:	81 85       	ldd	r24, Z+9	; 0x09
 114:	82 bb       	out	0x12, r24	; 18
 116:	bd cf       	rjmp	.-134    	; 0x92 <main+0x16>

00000118 <_exit>:
 118:	f8 94       	cli

0000011a <__stop_program>:
 11a:	ff cf       	rjmp	.-2      	; 0x11a <__stop_program>
